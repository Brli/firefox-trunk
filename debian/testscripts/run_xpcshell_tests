#!/usr/bin/python

import sys
import os.path
from testrunhelper import TestRunHelper

class XPCShellTestsHelper(TestRunHelper):
  def __init__(self):
    PASSTHROUGH_ARGS = [
      '--interactive',
      '--verbose',
      '--manifest',
      '--debugger',
      '--debugger-args',
      '--debugger-interactive',
      '--tests-root-dir',
      '--testing-modules-dir',
      '--build-info-json'
    ]

    TestRunHelper.__init__(self, 'xpcshell/runxpcshelltests.py',
                           lambda g: g['XPCShellOptions'](),
                           pass_args=PASSTHROUGH_ARGS,
                           paths=[],
                           need_x=True, need_dbus=True)

    self.add_option('--xpcshell',
                    dest='xpcshell', default=None,
                    help='Override the path to the xpcshell binary')
    self.add_option('--logfiles',
                    action='store_true', dest='logfiles', default=False,
                    help='Create log files')

def main():
  DEFAULTS = {
    '--tests-root-dir': lambda: os.path.join(helper.root, 'xpcshell', 'tests'),
    '--testing-modules-dir': lambda: os.path.join(helper.root, 'modules'),
    '--build-info-json': lambda: os.path.join(helper.root, 'python', 'mozinfo.json')
  }

  def pre_run_cb(options, args):
    if not options.logfiles:
      sys.argv.append('--no-logfiles')

    for arg in args:
      if arg.endswith('.js'):
        if len(args) > 1:
          raise Exception('Can only specify one file at a time')
        sys.argv.extend(['--test-path', os.path.basename(arg)])
        args[0] = os.path.dirname(arg)

    sys.argv.append(os.path.join(helper.root, 'bin', 'xpcshell') if options.xpcshell == None else options.xpcshell)

  helper = XPCShellTestsHelper()
  sys.exit(helper.run(defaults=DEFAULTS, pre_run_cb=pre_run_cb))

if __name__ == '__main__':
  main()
