#!/usr/bin/python

import sys
import os.path
from testrunhelper import TestRunHelper

class MochitestHelper(TestRunHelper):
  def __init__(self):
    PASSTHROUGH_ARGS = [
      '--a11y',
      '--appname',
      '--browser-chrome',
      '--certificate-path',
      '--chrome',
      '--console-level',
      '--ipcplugins',
      '--log-file',
      '--file-level',
      '--setpref',
      '--test-path',
      '--testing-modules-dir',
      '--timeout',
      '--utility-path',
      '--debugger',
      '--debugger-args',
      '--debugger-interactive',
    ]

    TestRunHelper.__init__(self, 'mochitest/runtests.py',
                           lambda g: g['MochitestOptions'](g['Automation'](), g['__file__']),
                           pass_args=PASSTHROUGH_ARGS,
                           need_x=True, need_dbus=True)

    self.add_option('--no-autorun',
                    action='store_true', dest='noAutorun', default=False,
                    help="Don't start running tests when the application starts")
    self.add_option('--no-close-when-done',
                    action='store_true', dest='noCloseWhenDone',
                    help="Don't close the application when tests have finished running")

def main():
  DEFAULTS = {
    '--appname': lambda: os.path.join(helper.root, 'bin', '@MOZ_APP_NAME@'),
    '--console-level': 'INFO',
    '--testing-modules-dir': lambda: os.path.join(helper.root, 'modules'),
    '--utility-path': lambda: os.path.join(helper.root, 'bin'),
    '--certificate-path': lambda: os.path.join(helper.root, 'certs')
  }

  def pre_run_cb(options, args):
    if not options.noAutorun:
      sys.argv.append('--autorun')
    if not options.noCloseWhenDone:
      sys.argv.append('--close-when-done')

  helper = MochitestHelper()
  sys.exit(helper.run(defaults=DEFAULTS, pre_run_cb=pre_run_cb))

if __name__ == '__main__':
  main()
