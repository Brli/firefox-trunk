#!/usr/bin/make -f

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_BUILD_ARCH		?= $(shell dpkg-architecture -qDEB_BUILD_ARCH)

DEBIAN_NAME	:= $(shell dpkg-parsechangelog | sed -n 's/^Source: *\(.*\)$$/\1/ p')
DEBIAN_APP_NAME	:= $(shell echo $(DEBIAN_NAME) | sed -e 's/-.*//')
DEBIAN_VERSION	:= $(shell dpkg-parsechangelog | sed -n 's/^Version: *\(.*\)$$/\1/ p')
DEBIAN_XUL_VER  := $(shell xulrunner-1.9.1 --gre-version)
DEBIAN_XUL_DEV	:= /usr/lib/xulrunner-devel-$(DEBIAN_XUL_VER)
DEBIAN_XUL_DIR	:= usr/lib/xulrunner-$(DEBIAN_XUL_VER)
DEBIAN_FF3_VER	 = $(shell cat build-tree/mozilla/browser/config/version.txt)
DEBIAN_FF3_DIR	 = usr/lib/$(DEBIAN_APP_NAME)-$(DEBIAN_FF3_VER)
DEB_TAR_SRCDIR	:= mozilla

# minVersion and maxVersion used in install.rdf
EM_TRANSLATION_VERSION     = $(DEBIAN_FF3_VER)
EM_TRANSLATION_MIN_VERSION = 3.0
EM_TRANSLATION_MAX_VERSION = $(DEBIAN_FF3_VER)

EXTRA_SYSTEM_CONFIGURE_FLAGS = $(NULL)

FORCE_OFFICIAL_BRANDING = $(NULL)

ifneq (,$(FORCE_OFFICIAL_BRANDING))
	# official branding for beta, final and final RCs builds
	BRANDING = --enable-official-branding
	DESKTOP  = $(DEBIAN_NAME)-final.desktop
else
# Change branding based on Version
ifneq (,$(findstring ~hg,$(DEBIAN_VERSION)))
	# minefield branding for hg snapshots
	BRANDING = $(NULL)
	DESKTOP  = $(DEBIAN_NAME)-minefield.desktop
else
ifneq (,$(findstring ~a,$(DEBIAN_VERSION)))
	# codename branding for alpha builds
	BRANDING = --with-branding=browser/branding/unofficial
	DESKTOP  = $(DEBIAN_NAME)-granparadiso.desktop
else
	# official branding for beta, final and final RCs builds
	BRANDING = --enable-official-branding
	DESKTOP  = $(DEBIAN_NAME)-final.desktop
endif
endif
endif

# translation flags
MOZ_TRANSLATION_AUTO_XPI_OUTDIR := debian/lp-export-xpis/
MOZ_TRANSLATION_AUTO_XPI_SEARCHDIRS := debian/$(DEBIAN_NAME)
MOZ_TRANSLATION_AUTO_XPI_LOCALE := en-US

# workaround multiple crashes in Intrepid caused by Intrepid shipping gcc 4.3
# with -D_FORTIFY_SOURCE=2 by default
CPPFLAGS=-U_FORTIFY_SOURCE
export CPPFLAGS
$(warning export CPPFLAGS=$(CPPFLAGS))

DEB_AUTO_UPDATE_AUTOCONF=2.13

include /usr/share/cdbs/1/rules/tarball.mk
include /usr/share/cdbs/1/rules/debhelper.mk
include /usr/share/cdbs/1/rules/patchsys-quilt.mk
include /usr/share/cdbs/1/class/autotools.mk
include /usr/share/mozilla-devscripts/$(DEBIAN_NAME).mk
include /usr/share/mozilla-devscripts/lp-locale-export.mk

# We don't want build-tree/mozilla/README to be shipped as a doc
DEB_INSTALL_DOCS_ALL := $(NULL)

CFLAGS = -g
CXXFLAGS = -g

LDFLAGS=$(shell echo $$LDFLAGS | sed -e 's/-Wl,-Bsymbolic-functions//')
export LDFLAGS

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	EXTRA_SYSTEM_CONFIGURE_FLAGS += --disable-optimize
endif

USE_SYSTEM_CAIRO := $(shell pkg-config --exists 'cairo >= 1.5.8'; a=$$?; if test $$a != 1; then echo 1; fi)
# for old cairo versions we cannot use system cairo
ifeq (1,$(USE_SYSTEM_CAIRO))
	EXTRA_SYSTEM_CONFIGURE_FLAGS += --enable-system-cairo
else
	EXTRA_SYSTEM_CONFIGURE_FLAGS += --disable-system-cairo
endif

USE_SYSTEM_SQLITE :=  $(shell pkg-config --exists 'sqlite3 >= 3.5'; a=$$?; if test $$a != 1; then echo 1; fi)
ifeq (1,$(USE_SYSTEM_SQLITE))
	EXTRA_SYSTEM_CONFIGURE_FLAGS += --enable-system-sqlite
else
	EXTRA_SYSTEM_CONFIGURE_FLAGS += --disable-system-sqlite
endif

DEB_CONFIGURE_USER_FLAGS= \
	$(EXTRA_SYSTEM_CONFIGURE_FLAGS) \
	--disable-debug \
	--with-user-appdir=.mozilla \
	--with-system-jpeg=/usr \
	--with-system-zlib=/usr \
	--with-libxul-sdk=$(DEBIAN_XUL_DEV) \
	--with-system-nspr \
	--with-system-nss \
	--disable-crashreporter \
	--disable-composer \
	--disable-elf-dynstr-gc \
	--disable-gtktest \
	--disable-install-strip \
	--disable-installer \
	--disable-ldap \
	--disable-mailnews \
	--disable-profilesharing \
	--disable-strip \
	--disable-strip-libs \
	--disable-tests \
	--disable-mochitest \
	--disable-updater \
	--disable-xprint \
	--enable-application=browser \
	--enable-canvas \
	--enable-default-toolkit=cairo-gtk2 \
	--enable-gnomevfs \
	--enable-optimize \
	--enable-pango \
	--enable-postscript \
	--enable-svg \
	--enable-mathml \
	--enable-xft \
	--enable-xinerama \
	--enable-extensions=default,-reporter \
	--enable-single-profile \
	--enable-system-myspell \
	--with-distribution-id=com.ubuntu \
	$(BRANDING)

UUDECODE = \
	debsearch.gif \
	$(NULL)

DEBIAN_EXECUTABLES = \
	firefox.sh \
	$(NULL)

subst_files = \
	debian/$(DEBIAN_NAME)-gnome-support.postinst \
	debian/$(DEBIAN_NAME).postinst \
	debian/firefox.sh \
	$(NULL)

%: %.in
	sed -e 's,@LIBDIR@,/$(DEBIAN_FF3_DIR),g' \
	    -e 's,@APPNAME@,$(DEBIAN_NAME),g' < $< > $@

debian/firefox.sh: debian/firefox.sh.in
	sed -e 's,@LIBDIR@,/$(DEBIAN_FF3_DIR),g' < $< > $@

debian/migrator/ffox-31-beta-profile-migration-dialog: debian/migrator/main.c
	$(CC) $(CFLAGS) -o $@ $< $(shell pkg-config --cflags --libs gtk+-2.0)

binary-install/$(DEBIAN_NAME)::
	touch debian/$(DEBIAN_NAME)/$(DEBIAN_FF3_DIR)/.autoreg
	if [ -d debian/$(DEBIAN_NAME)/usr/lib/xulrunner-addons/extensions ] ; then \
	  touch $(foreach dir,$(wildcard debian/$(DEBIAN_NAME)/usr/lib/xulrunner-addons/extensions/*),$(dir)/chrome.manifest) ; \
	fi
	dh_install debian/firefox.sh $(DEBIAN_FF3_DIR)
	dh_installdocs -p$(DEBIAN_NAME) debian/firefox.cfg
	dh_install debian/$(DEBIAN_NAME)-restart-required.update-notifier $(DEBIAN_FF3_DIR)
	dh_install debian/migrator/ffox-31-beta-profile-migration-dialog $(DEBIAN_FF3_DIR)
	dh_link $(DEBIAN_FF3_DIR)/firefox.sh usr/bin/$(DEBIAN_NAME)
	dh_link usr/lib/firefox-addons/extensions $(DEBIAN_FF3_DIR)/extensions
	dh_link usr/lib/firefox-addons/plugins $(DEBIAN_FF3_DIR)/plugins
	dh_link usr/lib/firefox-addons/searchplugins $(DEBIAN_FF3_DIR)/searchplugins
	dh_link etc/$(DEBIAN_NAME)/pref $(DEBIAN_FF3_DIR)/defaults/syspref
	dh_link etc/$(DEBIAN_NAME)/profile $(DEBIAN_FF3_DIR)/defaults/profile
	dh_link $(DEBIAN_FF3_DIR)/icons/mozicon128.png usr/share/pixmaps/$(DEBIAN_NAME).png
	dh_link usr/share/myspell/dicts $(DEBIAN_FF3_DIR)/dictionaries

binary-install/$(DEBIAN_NAME):: debian/$(DEBIAN_NAME)/$(DEBIAN_FF3_DIR)/defaults/preferences/ubuntu-useragent.js

debian/$(DEBIAN_NAME)/$(DEBIAN_FF3_DIR)/defaults/preferences/ubuntu-useragent.js: debian/ubuntu-useragent.js.tmpl
	sed \
		-e 's/@VENDOR@/'`lsb_release -i -s`'/g' \
		-e 's/@VENDOR_SUB@/'`lsb_release -r -s`'/g' \
		-e 's/@VENDOR_COMMENT@/'`lsb_release -c -s`'/g' \
		< $< > $@

LOCALE_VERSION = $(shell echo $(DEBIAN_VERSION) | sed -e 's/~hg.*/pre/' | tr -d '~')

binary-post-install/$(DEBIAN_NAME):: auto-locale-xpi.mk/translate compare
	sed \
		-e 's/@EM_VERSION@/$(EM_TRANSLATION_VERSION)/' \
		-e 's/@EM_FIREFOX_MIN_VERSION@/$(EM_TRANSLATION_MIN_VERSION)/' \
		-e 's/@EM_FIREFOX_MAX_VERSION@/$(EM_TRANSLATION_MAX_VERSION)/' \
		< debian/translation-support/install.rdf.in > debian/install.rdf
	cd debian && zip lp-export-xpis/en-US.xpi install.rdf
ifeq (,$(findstring $(EM_TRANSLATION_VERSION), $(LOCALE_VERSION)))
	$(warning EM_TRANSLATION_VERSION=$(EM_TRANSLATION_VERSION) LOCALE_VERSION=$(LOCALE_VERSION). You need to explicitly adjust the translation version and min/max bounds.)
endif

pre-build:: $(subst_files) debian/migrator/ffox-31-beta-profile-migration-dialog
	set -e; for i in $(UUDECODE); do \
		uudecode -o debian/$$i debian/$$i.uu; \
		done ; \
		cp debian/$(DESKTOP) debian/$(DEBIAN_NAME).desktop; \
		for i in $(DEBIAN_EXECUTABLES); do \
			chmod a+x debian/$$i; \
		done

clean::
	set -e; for i in $(UUDECODE); do \
		rm -f debian/$$i; \
		done ; 
	rm -f debian/$(DEBIAN_NAME).desktop
	rm -f $(subst_files) debian/install.rdf
	rm -f debian/migrator/ffox-31-beta-profile-migration-dialog
	rm -f debian/migrator/*~

