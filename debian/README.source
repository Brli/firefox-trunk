1) To create the fully patched source, just run "debian/rules apply-patches" in the source directory. The fully patched source will be available in build-tree/mozilla

2) This package uses the quilt patch system. To create or edit patches which are applied at build time, you must first extract the source tarball. To do this, run "debian/rules pre-build". cd in to build-tree/mozilla and use quilt in the usual fashion (see "man quilt").

Your life will be much easier if you add the following to ~/.quiltrc:

for where in ./ ../ ../../ ../../../ ../../../../ ../../../../../; do
        if [ -e ${where}debian/rules -a -d ${where}debian/patches ]; then
                export QUILT_PATCHES=${where}debian/patches
        fi
done

So, basically:

	a) debian/rules pre-build
	b) cd build-tree/mozilla
	c) quilt push <patchname>
	.....or.....
	   quilt push
	.....or.....
	   quilt push -a
	.....or.....
	   quilt new

You get the idea.....

3) To remove any changes applied to the packaging, run "fakeroot debian/rules clean". This will remove all patches and delete auto-generated files

4) It is possible to disable quilt patches on a per-release basis. To do this, create a debian/patches/series-disable-patches.<major_version>.<minor_version> file, and list the patches that you don't want to apply for a particular release. Eg, for Ubuntu 8.04, create a file named debian/patches/series-disable-patches.8.04.

You can still edit patches in the usual fashion - when manually applying patches, no patches are disabled (this only happens at build time).

To manually disable the patches for your current release, run "debian/rules debian/disable-patches-for-release". To re-enable them again, run the clean target (but any changes you made to the temporary debian/patches/series will be lost here)
