Description: fix link error on armhf where arm_cpu_caps is defined twice, in
 third_party/aom/aom_ports/arm_cpudetect.c and in
 media/libvpx/libvpx/vpx_ports/arm_cpudetect.c.
 This change is consistent with an upcoming update of aom in firefox
 (https://bugzilla.mozilla.org/show_bug.cgi?id=1489285).
Author: Olivier Tilloy <olivier.tilloy@canonical.com>

--- a/third_party/aom/aom_ports/arm.h
+++ b/third_party/aom/aom_ports/arm.h
@@ -26,7 +26,7 @@ extern "C" {
 /*ARMv7 optional NEON instructions.*/
 #define HAS_NEON 0x04
 
-int arm_cpu_caps(void);
+int aom_arm_cpu_caps(void);
 
 // Earlier gcc compilers have issues with some neon intrinsics
 #if !defined(__clang__) && defined(__GNUC__) && __GNUC__ == 4 && \
--- a/third_party/aom/aom_ports/arm_cpudetect.c
+++ b/third_party/aom/aom_ports/arm_cpudetect.c
@@ -40,7 +40,7 @@ static int arm_cpu_env_mask(void) {
 
 #if !CONFIG_RUNTIME_CPU_DETECT
 
-int arm_cpu_caps(void) {
+int aom_arm_cpu_caps(void) {
   /* This function should actually be a no-op. There is no way to adjust any of
    * these because the RTCD tables do not exist: the functions are called
    * statically */
@@ -62,7 +62,7 @@ int arm_cpu_caps(void) {
 #define WIN32_EXTRA_LEAN
 #include <windows.h>
 
-int arm_cpu_caps(void) {
+int aom_arm_cpu_caps(void) {
   int flags;
   int mask;
   if (!arm_cpu_env_flags(&flags)) {
@@ -90,7 +90,7 @@ int arm_cpu_caps(void) {
 #elif defined(__ANDROID__) /* end _MSC_VER */
 #include <cpu-features.h>
 
-int arm_cpu_caps(void) {
+int aom_arm_cpu_caps(void) {
   int flags;
   int mask;
   uint64_t features;
@@ -110,7 +110,7 @@ int arm_cpu_caps(void) {
 
 #include <stdio.h>
 
-int arm_cpu_caps(void) {
+int aom_arm_cpu_caps(void) {
   FILE *fin;
   int flags;
   int mask;
--- a/third_party/aom/build/make/rtcd.pl
+++ b/third_party/aom/build/make/rtcd.pl
@@ -304,7 +304,7 @@ sub arm() {
 #include "aom_ports/arm.h"
 static void setup_rtcd_internal(void)
 {
-    int flags = arm_cpu_caps();
+    int flags = aom_arm_cpu_caps();
 
     (void)flags;
 
