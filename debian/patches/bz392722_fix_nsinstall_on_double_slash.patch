---
 config/nsinstall.c                      |    3 +--
 nsprpub/config/nsinstall.c              |    3 +--
 security/coreconf/nsinstall/nsinstall.c |    3 +--
 3 files changed, 3 insertions(+), 6 deletions(-)

Index: mozilla/config/nsinstall.c
===================================================================
--- mozilla.orig/config/nsinstall.c
+++ mozilla/config/nsinstall.c
@@ -106,18 +106,17 @@
 
     /* strip trailing "/." */
     l = strlen(path);
     if(l > 1 && path[l - 1] == '.' && path[l - 2] == '/')
         path[l - 2] = 0;
 
     while (*path == '/' && path[1] == '/')
 	path++;
-    while ((cp = strrchr(path, '/')) && cp[1] == '\0')
-	*cp = '\0';
+    for (cp = strrchr(path, '/'); cp && cp != path && *(cp - 1) == '/'; cp--);
     if (cp && cp != path) {
 	*cp = '\0';
 	if ((lstat(path, &sb) < 0 || !S_ISDIR(sb.st_mode)) &&
 	    mkdirs(path, mode) < 0) {
 	    return -1;
 	}
 	*cp = '/';
     }
Index: mozilla/nsprpub/config/nsinstall.c
===================================================================
--- mozilla.orig/nsprpub/config/nsinstall.c
+++ mozilla/nsprpub/config/nsinstall.c
@@ -130,18 +130,17 @@
 mkdirs(char *path, mode_t mode)
 {
     char *cp;
     struct stat sb;
     int res;
     
     while (*path == '/' && path[1] == '/')
 	path++;
-    while ((cp = strrchr(path, '/')) && cp[1] == '\0')
-	*cp = '\0';
+    for (cp = strrchr(path, '/'); cp && cp != path && *(cp - 1) == '/'; cp--);
     if (cp && cp != path) {
 	*cp = '\0';
 	if ((stat(path, &sb) < 0 || !S_ISDIR(sb.st_mode)) &&
 	    mkdirs(path, mode) < 0) {
 	    return -1;
 	}
 	*cp = '/';
     }
Index: mozilla/security/coreconf/nsinstall/nsinstall.c
===================================================================
--- mozilla.orig/security/coreconf/nsinstall/nsinstall.c
+++ mozilla/security/coreconf/nsinstall/nsinstall.c
@@ -120,18 +120,17 @@
     char *      cp;
     int         rv;
     struct stat sb;
     
     if (!path || !path[0]) 
 	fail("Null pointer or empty string passed to mkdirs()");
     while (*path == '/' && path[1] == '/')
 	path++;
-    while ((cp = strrchr(path, '/')) && cp[1] == '\0')
-	*cp = '\0';
+    for (cp = strrchr(path, '/'); cp && cp != path && *(cp - 1) == '/'; cp--);
     if (cp && cp != path) {
 	*cp = '\0';
 	if ((stat(path, &sb) < 0 || !S_ISDIR(sb.st_mode)) &&
 	    mkdirs(path, mode) < 0) {
 	    return -1;
 	}
 	*cp = '/';
     }
