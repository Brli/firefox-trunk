Index: firefox-trunk-26.0~a1~hg20130911r146458/build/autoconf/arch.m4
===================================================================
--- firefox-trunk-26.0~a1~hg20130911r146458.orig/build/autoconf/arch.m4	2013-09-11 03:12:17.000000000 +0100
+++ firefox-trunk-26.0~a1~hg20130911r146458/build/autoconf/arch.m4	2013-09-11 12:51:34.977008568 +0100
@@ -197,28 +197,28 @@
   ARM_ARCH=`${CC-cc} ${CFLAGS} -dM -E - < /dev/null | sed -n 's/.*__ARM_ARCH_\([[0-9]]*\).*/\1/p'`
   AC_MSG_RESULT("$ARM_ARCH")
 
-  AC_MSG_CHECKING(for ARM NEON support in compiler)
-  # We try to link so that this also fails when
-  # building with LTO.
-  AC_TRY_LINK([],
-                 [asm(".fpu neon\n vadd.i8 d0, d0, d0");],
-                 result="yes", result="no")
-  AC_MSG_RESULT("$result")
-  if test "$result" = "yes"; then
-      AC_DEFINE(HAVE_ARM_NEON)
-      HAVE_ARM_NEON=1
-
-      dnl We don't need to build NEON support if we're targetting a non-NEON device.
-      dnl This matches media/webrtc/trunk/webrtc/build/common.gypi.
-      if test -n "$ARM_ARCH"; then
-          if test "$ARM_ARCH" -lt 7; then
-              BUILD_ARM_NEON=
-          else
-              AC_DEFINE(BUILD_ARM_NEON)
-              BUILD_ARM_NEON=1
-          fi
-      fi
-  fi
+  #AC_MSG_CHECKING(for ARM NEON support in compiler)
+  ## We try to link so that this also fails when
+  ## building with LTO.
+  #AC_TRY_LINK([],
+  #               [asm(".fpu neon\n vadd.i8 d0, d0, d0");],
+  #               result="yes", result="no")
+  #AC_MSG_RESULT("$result")
+  #if test "$result" = "yes"; then
+  #    AC_DEFINE(HAVE_ARM_NEON)
+  #    HAVE_ARM_NEON=1
+  #
+  #    dnl We don't need to build NEON support if we're targetting a non-NEON device.
+  #    dnl This matches media/webrtc/trunk/webrtc/build/common.gypi.
+  #    if test -n "$ARM_ARCH"; then
+  #        if test "$ARM_ARCH" -lt 7; then
+  #            BUILD_ARM_NEON=
+  #        else
+  #            AC_DEFINE(BUILD_ARM_NEON)
+  #            BUILD_ARM_NEON=1
+  #        fi
+  #    fi
+  #fi
 
 fi # CPU_ARCH = arm
 
Index: firefox-trunk-26.0~a1~hg20130911r146458/js/src/build/autoconf/arch.m4
===================================================================
--- firefox-trunk-26.0~a1~hg20130911r146458.orig/js/src/build/autoconf/arch.m4	2013-09-11 03:16:14.000000000 +0100
+++ firefox-trunk-26.0~a1~hg20130911r146458/js/src/build/autoconf/arch.m4	2013-09-11 12:51:48.913008716 +0100
@@ -197,28 +197,28 @@
   ARM_ARCH=`${CC-cc} ${CFLAGS} -dM -E - < /dev/null | sed -n 's/.*__ARM_ARCH_\([[0-9]]*\).*/\1/p'`
   AC_MSG_RESULT("$ARM_ARCH")
 
-  AC_MSG_CHECKING(for ARM NEON support in compiler)
-  # We try to link so that this also fails when
-  # building with LTO.
-  AC_TRY_LINK([],
-                 [asm(".fpu neon\n vadd.i8 d0, d0, d0");],
-                 result="yes", result="no")
-  AC_MSG_RESULT("$result")
-  if test "$result" = "yes"; then
-      AC_DEFINE(HAVE_ARM_NEON)
-      HAVE_ARM_NEON=1
-
-      dnl We don't need to build NEON support if we're targetting a non-NEON device.
-      dnl This matches media/webrtc/trunk/webrtc/build/common.gypi.
-      if test -n "$ARM_ARCH"; then
-          if test "$ARM_ARCH" -lt 7; then
-              BUILD_ARM_NEON=
-          else
-              AC_DEFINE(BUILD_ARM_NEON)
-              BUILD_ARM_NEON=1
-          fi
-      fi
-  fi
+  #AC_MSG_CHECKING(for ARM NEON support in compiler)
+  ## We try to link so that this also fails when
+  ## building with LTO.
+  #AC_TRY_LINK([],
+  #               [asm(".fpu neon\n vadd.i8 d0, d0, d0");],
+  #               result="yes", result="no")
+  #AC_MSG_RESULT("$result")
+  #if test "$result" = "yes"; then
+  #    AC_DEFINE(HAVE_ARM_NEON)
+  #    HAVE_ARM_NEON=1
+  #
+  #    dnl We don't need to build NEON support if we're targetting a non-NEON device.
+  #    dnl This matches media/webrtc/trunk/webrtc/build/common.gypi.
+  #    if test -n "$ARM_ARCH"; then
+  #        if test "$ARM_ARCH" -lt 7; then
+  #            BUILD_ARM_NEON=
+  #        else
+  #            AC_DEFINE(BUILD_ARM_NEON)
+  #            BUILD_ARM_NEON=1
+  #        fi
+  #    fi
+  #fi
 
 fi # CPU_ARCH = arm
 
