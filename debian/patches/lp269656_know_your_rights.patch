---
 browser/base/content/aboutRights.xhtml |   58 +++++++++++++++
 browser/base/jar.mn                    |    1 
 browser/components/Makefile.in         |    1 
 browser/components/aboutRights.js      |   63 +++++++++++++++++
 browser/components/nsBrowserGlue.js    |  120 +++++++++++++++++++++++++--------
 browser/installer/unix/packages-static |    1 
 6 files changed, 217 insertions(+), 27 deletions(-)

Index: mozilla/browser/components/nsBrowserGlue.js
===================================================================
--- mozilla.orig/browser/components/nsBrowserGlue.js
+++ mozilla/browser/components/nsBrowserGlue.js
@@ -67,16 +67,108 @@
 };
 
 // Constructor
 
 function BrowserGlue() {
   this._init();
 }
 
+// this returns the most recent non-popup browser window
+function getMostRecentBrowserWindow() {
+  var wm = Components.classes["@mozilla.org/appshell/window-mediator;1"]
+      .getService(Components.interfaces.nsIWindowMediator);
+
+  var win = wm.getMostRecentWindow("navigator:browser", true);
+
+  // if we're lucky, this isn't a popup, and we can just return this
+  if (win && win.document.documentElement.getAttribute("chromehidden")) {
+      var windowList = wm.getEnumerator("navigator:browser", true);
+      // this is oldest to newest, so this gets a bit ugly
+      while (windowList.hasMoreElements()) {
+	  var nextWin = windowList.getNext();
+	  if (!nextWin.document.documentElement.getAttribute("chromehidden"))
+	      win = nextWin;
+      }
+  }
+  return win;
+}
+
+function getMostRecentBrowser () {
+    var browserWindow = getMostRecentBrowserWindow();
+    var browser = browserWindow.getBrowser();
+    return browser;
+}
+
+function openYourRights () {
+    var YOUR_RIGHTS_LOCATION = "about:rights";
+    var YOUR_RIGHTS_URI = Components.classes["@mozilla.org/network/io-service;1"]
+	.getService(Components.interfaces.nsIIOService)
+	.newURI(YOUR_RIGHTS_LOCATION, null, null);
+
+    var browserDOMWindow = getMostRecentBrowserWindow().browserDOMWindow;
+
+    browserDOMWindow.openURI (YOUR_RIGHTS_URI,
+			   null,
+			   Components.interfaces.nsIBrowserDOMWindow.OPEN_DEFAULTWINDOW,
+			   null);
+}
+
+function doRightsDisplay(e) {
+    var FIREFOX_WELCOME_TEXT = "Mozilla Firefox is free and open software from the non-profit Mozilla Foundation.";
+    var YOURRIGHTS_TEXT = "Know Your Rights...";
+    var YOURRIGHTS_ACCESSKEY = "K";
+    var buttons = [{ label: YOURRIGHTS_TEXT, accessKey: YOURRIGHTS_ACCESSKEY, callback: openYourRights }];
+
+    var rbrowser = getMostRecentBrowser();
+    if (rbrowser.selectedBrowser != rbrowser.getBrowserForDocument(e.target)) {
+       dump ("non top most browser tab loaded -> no rights here!\n");
+       return;
+    }
+
+    var browser = rbrowser.getBrowserForDocument(e.target).getTabBrowser();
+    var notificationBox = browser.getNotificationBox();
+    var notification = notificationBox.getNotificationWithValue("your-rights");
+
+    if(!notification)
+	notification = notificationBox.appendNotification(FIREFOX_WELCOME_TEXT,
+					   'your-rights',"",
+					   notificationBox.PRIORITY_INFO_HIGH,
+					   buttons);
+    notification.persistence++;
+    notification.timeout = Date.now() + 60000; // 60 seconds
+    
+    browser.removeEventListener ("DOMContentLoaded", doRightsDisplay, false);
+
+    var rightsCurrent = "0.0";
+    try { rightsCurrent = prefs.getCharPref("mozilla.firefox.rights.current"); } catch (e) {}
+
+    var prefs = Components.classes["@mozilla.org/preferences-service;1"]
+	.getService(Components.interfaces.nsIPrefBranch);
+    prefs.setCharPref("mozilla.firefox.rights.seen", rightsCurrent);
+}
+
+function scheduleRightsNotification () {
+
+    var prefs = Components.classes["@mozilla.org/preferences-service;1"]
+	.getService(Components.interfaces.nsIPrefBranch);
+
+    var rightsSeen = null;
+    var rightsCurrent = "0.0";
+    try { rightsSeen = prefs.getCharPref("mozilla.firefox.rights.seen"); } catch (e) {}
+    try { rightsCurrent = prefs.getCharPref("mozilla.firefox.rights.current"); } catch (e) {}
+
+    if(rightsSeen != null && rightsSeen == rightsCurrent) {
+	return;
+    }
+    var browser = getMostRecentBrowser();
+    browser.addEventListener("DOMContentLoaded", doRightsDisplay, false);
+}
+
+
 BrowserGlue.prototype = {
   _saveSession: false,
 
   _setPrefToSaveSession: function()
   {
     var prefBranch = Cc["@mozilla.org/preferences-service;1"].
                      getService(Ci.nsIPrefBranch);
     prefBranch.setBoolPref("browser.sessionstore.resume_session_once", true);
@@ -94,16 +186,17 @@
         break;
       case "prefservice:after-app-defaults":
         this._onAppDefaults();
         break;
       case "final-ui-startup":
         this._onProfileStartup();
         break;
       case "sessionstore-windows-restored":
+        scheduleRightsNotification ();
         this._onBrowserStartup();
         break;
       case "browser:purge-session-history":
         // reset the console service's error buffer
         const cs = Cc["@mozilla.org/consoleservice;1"].
                    getService(Ci.nsIConsoleService);
         cs.logStringMessage(null); // clear the console (in case it's open)
         cs.reset();
@@ -170,43 +263,16 @@
     // other customizations are applied in _onProfileStartup()
     var distro = new DistributionCustomizer();
     distro.applyPrefDefaults();
   },
 
   // profile startup handler (contains profile initialization routines)
   _onProfileStartup: function() 
   {
-    // Check to see if the EULA must be shown on startup
-
-    var prefBranch = Cc["@mozilla.org/preferences-service;1"].
-                     getService(Ci.nsIPrefBranch);
-    var mustDisplayEULA = false;
-    try {
-      mustDisplayEULA = !prefBranch.getBoolPref("browser.EULA.override");
-    } catch (e) {
-      // Pref might not exist
-    }
-
-    // Make sure it hasn't already been accepted
-    if (mustDisplayEULA) {
-      try {
-        var EULAVersion = prefBranch.getIntPref("browser.EULA.version");
-        mustDisplayEULA = !prefBranch.getBoolPref("browser.EULA." + EULAVersion + ".accepted");
-      } catch(ex) {
-      }
-    }
-
-    if (mustDisplayEULA) {
-      var ww2 = Cc["@mozilla.org/embedcomp/window-watcher;1"].
-                getService(Ci.nsIWindowWatcher);
-      ww2.openWindow(null, "chrome://browser/content/EULA.xul", 
-                     "_blank", "chrome,centerscreen,modal,resizable=yes", null);
-    }
-
     this.Sanitizer.onStartup();
     // check if we're in safe mode
     var app = Cc["@mozilla.org/xre/app-info;1"].getService(Ci.nsIXULAppInfo).
               QueryInterface(Ci.nsIXULRuntime);
     if (app.inSafeMode) {
       var ww = Cc["@mozilla.org/embedcomp/window-watcher;1"].
                getService(Ci.nsIWindowWatcher);
       ww.openWindow(null, "chrome://browser/content/safeMode.xul", 
Index: mozilla/browser/components/aboutRights.js
===================================================================
--- /dev/null
+++ mozilla/browser/components/aboutRights.js
@@ -0,0 +1,63 @@
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the "License"); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is http://developer.mozilla.org/En/Code_snippets:JS_XPCOM
+ *
+ * The Initial Developer of the Original Code is Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2008
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s):
+ *   Alexander Sack <asac@canonical.com>
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the "GPL"), or
+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+Components.utils.import("resource://gre/modules/XPCOMUtils.jsm");
+const Cc = Components.classes;
+const Ci = Components.interfaces;
+function AboutRightsHandler() { }
+
+AboutRightsHandler.prototype = {
+    newChannel : function(aURI) {
+        if(!(aURI.spec == "about:rights")) return;
+        var ios = Cc["@mozilla.org/network/io-service;1"].getService(Ci.nsIIOService);
+        var channel = ios.newChannel("chrome://browser/content/aboutRights.xhtml", null, null);
+        channel.originalURI = aURI;
+        return channel;
+    },
+    getURIFlags: function(aURI) {
+        return Ci.nsIAboutModule.URI_SAFE_FOR_UNTRUSTED_CONTENT;
+    },
+
+    classDescription: "About Rights Page",
+    classID: Components.ID("a9de133c-6c09-4a6b-b376-88ad56c0a351"),
+    contractID: "@mozilla.org/network/protocol/about;1?what=rights",
+    QueryInterface: XPCOMUtils.generateQI([Ci.nsIAboutModule]),
+}
+
+function NSGetModule(aCompMgr, aFileSpec) {
+  return XPCOMUtils.generateModule([AboutRightsHandler]);
+}
+
Index: mozilla/browser/components/Makefile.in
===================================================================
--- mozilla.orig/browser/components/Makefile.in
+++ mozilla/browser/components/Makefile.in
@@ -48,16 +48,17 @@
 XPIDLSRCS = \
 	nsIBrowserHandler.idl \
 	nsIBrowserGlue.idl \
 	$(NULL)
 
 EXTRA_PP_COMPONENTS = \
 	nsBrowserContentHandler.js \
 	nsBrowserGlue.js \
+	aboutRights.js \
 	aboutRobots.js \
 	$(NULL)
 
 EXTRA_JS_MODULES = distribution.js
 
 DIRS = \
 	dirprovider \
 	microsummaries \
Index: mozilla/browser/base/content/aboutRights.xhtml
===================================================================
--- /dev/null
+++ mozilla/browser/base/content/aboutRights.xhtml
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+# ***** BEGIN LICENSE BLOCK *****
+# Version: MPL 1.1/GPL 2.0/LGPL 2.1
+#
+# The contents of this file are subject to the Mozilla Public License
+# Version
+# 1.1 (the "License"); you may not use this file except in compliance with
+# the License. You may obtain a copy of the License at
+# http://www.mozilla.org/MPL/
+#
+# Software distributed under the License is distributed on an "AS IS"
+# basis,
+# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+# for the specific language governing rights and limitations under the
+# License.
+#
+# The Original Code is aboutRights.xhtml
+#
+# The Initial Developer of the Original Code is
+# Canonical Ltd.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Alexander Sack <asac@canonical.com>
+#
+# Alternatively, the contents of this file may be used under the terms of
+# either the GNU General Public License Version 2 or later (the "GPL"), or
+# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+# in which case the provisions of the GPL or the LGPL are applicable instead
+# of those above. If you wish to allow use of your version of this file only
+# under the terms of either the GPL or the LGPL, and not to allow others to
+# use your version of this file under the terms of the MPL, indicate your
+# decision by deleting the provisions above and replace them with the notice
+# and other provisions required by the GPL or the LGPL. If you do not delete
+# the provisions above, a recipient may use your version of this file under
+# the terms of any one of the MPL, the GPL or the LGPL.
+#
+# ***** END LICENSE BLOCK ***** -->
+
+
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<title>Know Your Rights... (placeholder)</title>
+</head>
+<body>
+<h1>Know Your Rights... (placeholder)</h1>
+
+<div style="border: solid 1pt; padding: 2em">
+This is a placeholder page and will be replaced with the final about:rights page.
+Mockups are
+<a href="http://blog.lizardwrangler.com/2008/09/17/mock-ups-available-for-notices-previously-was-eula/">
+available on the net.</a>
+</div>
+</body>
+</html>
+
Index: mozilla/browser/base/jar.mn
===================================================================
--- mozilla.orig/browser/base/jar.mn
+++ mozilla/browser/base/jar.mn
@@ -12,16 +12,17 @@
 %  style chrome://global/content/customizeToolbar.xul chrome://browser/skin/
 *       content/browser/aboutDialog.xul               (content/aboutDialog.xul)
 *       content/browser/aboutDialog.js                (content/aboutDialog.js)
         content/browser/aboutDialog.css               (content/aboutDialog.css)
 *       content/browser/aboutRobots.xhtml             (content/aboutRobots.xhtml)
         content/browser/aboutRobots-icon.png          (content/aboutRobots-icon.png)
         content/browser/aboutRobots-widget-left.png   (content/aboutRobots-widget-left.png)
         content/browser/aboutRobots-widget-right.png  (content/aboutRobots-widget-right.png)
+*       content/browser/aboutRights.xhtml                     (content/aboutRights.xhtml)
 *       content/browser/browser.css                   (content/browser.css)
 *       content/browser/browser.js                    (content/browser.js)
 *       content/browser/browser.xul                   (content/browser.xul)
 *       content/browser/credits.xhtml                 (content/credits.xhtml)
 *       content/browser/EULA.js                       (content/EULA.js)
 *       content/browser/EULA.xhtml                    (content/EULA.xhtml)
 *       content/browser/EULA.xul                      (content/EULA.xul)
 *       content/browser/metaData.js                   (content/metaData.js)
Index: mozilla/browser/installer/unix/packages-static
===================================================================
--- mozilla.orig/browser/installer/unix/packages-static
+++ mozilla/browser/installer/unix/packages-static
@@ -240,16 +240,17 @@
 bin/components/nsDefaultCLH.js
 bin/components/nsContentPrefService.js
 bin/components/nsContentDispatchChooser.js
 bin/components/nsHandlerService.js
 bin/components/nsWebHandlerApp.js
 bin/components/libdbusservice.so
 bin/components/aboutRobots.js
 bin/components/nsBadCertHandler.js
+bin/components/aboutRights.js
 
 ; Modules
 bin/modules/*
 
 ; Safe Browsing
 bin/components/nsSafebrowsingApplication.js
 bin/components/nsUrlClassifierListManager.js
 bin/components/nsUrlClassifierLib.js
