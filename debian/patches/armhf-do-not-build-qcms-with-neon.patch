Description: Do not build qcms with NEON on armhf
Author: Olivier Tilloy <olivier.tilloy@canonical.com>

--- a/gfx/qcms/src/lib.rs
+++ b/gfx/qcms/src/lib.rs
@@ -47,7 +47,7 @@ pub mod matrix;
 pub mod transform;
 #[cfg(any(target_arch = "x86", target_arch = "x86_64"))]
 pub mod transform_avx;
-#[cfg(any(target_arch = "aarch64", target_arch = "arm"))]
+#[cfg(any(target_arch = "aarch64"))]
 pub mod transform_neon;
 #[cfg(any(target_arch = "x86", target_arch = "x86_64"))]
 pub mod transform_sse2;
--- a/gfx/qcms/src/transform.rs
+++ b/gfx/qcms/src/transform.rs
@@ -21,7 +21,7 @@
 // OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 // WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 
-#[cfg(any(target_arch = "arm", target_arch = "aarch64"))]
+#[cfg(any(target_arch = "aarch64"))]
 use crate::transform_neon::{
     qcms_transform_data_bgra_out_lut_neon, qcms_transform_data_rgb_out_lut_neon,
     qcms_transform_data_rgba_out_lut_neon,
@@ -1424,10 +1424,10 @@ pub unsafe extern "C" fn qcms_transform_
                         transform.transform_fn = Some(qcms_transform_data_bgra_out_lut_sse2)
                     }
                 }
-            } else if cfg!(any(target_arch = "arm", target_arch = "aarch64"))
+            } else if cfg!(any(target_arch = "aarch64"))
                 && qcms_supports_neon.load(Ordering::Relaxed)
             {
-                #[cfg(any(target_arch = "arm", target_arch = "aarch64"))]
+                #[cfg(any(target_arch = "aarch64"))]
                 {
                     if in_type == DATA_RGB_8 {
                         transform.transform_fn = Some(qcms_transform_data_rgb_out_lut_neon)
@@ -1571,5 +1571,5 @@ pub unsafe extern "C" fn qcms_enable_avx
 }
 #[no_mangle]
 pub extern "C" fn qcms_enable_neon() {
-    qcms_supports_neon.store(true, Ordering::Relaxed);
+    qcms_supports_neon.store(cfg!(any(target_arch = "aarch64")), Ordering::Relaxed);
 }
