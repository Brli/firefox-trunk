Description: Do not build qcms with NEON on armhf
Author: Olivier Tilloy <olivier.tilloy@canonical.com>

--- a/gfx/qcms/src/lib.rs
+++ b/gfx/qcms/src/lib.rs
@@ -47,7 +47,7 @@ pub mod matrix;
 pub use transform::Transform;
 #[cfg(any(target_arch = "x86", target_arch = "x86_64"))]
 mod transform_avx;
-#[cfg(any(target_arch = "aarch64", target_arch = "arm"))]
+#[cfg(any(target_arch = "aarch64"))]
 mod transform_neon;
 #[cfg(any(target_arch = "x86", target_arch = "x86_64"))]
 mod transform_sse2;
--- a/gfx/qcms/src/transform.rs
+++ b/gfx/qcms/src/transform.rs
@@ -21,7 +21,7 @@
 // OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 // WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 
-#[cfg(any(target_arch = "arm", target_arch = "aarch64"))]
+#[cfg(any(target_arch = "aarch64"))]
 use crate::transform_neon::{
     qcms_transform_data_bgra_out_lut_neon, qcms_transform_data_rgb_out_lut_neon,
     qcms_transform_data_rgba_out_lut_neon,
@@ -1234,12 +1234,10 @@
                 }
             }
 
-            #[cfg(target_arch = "arm")]
-            let neon_supported = is_arm_feature_detected!("neon");
             #[cfg(target_arch = "aarch64")]
             let neon_supported = is_aarch64_feature_detected!("neon");
 
-            #[cfg(any(target_arch = "arm", target_arch = "aarch64"))]
+            #[cfg(any(target_arch = "aarch64"))]
             if neon_supported {
                 if in_type == RGB8 {
                     transform.transform_fn = Some(qcms_transform_data_rgb_out_lut_neon)
