---
 browser/base/content/browser.js |   20 +++++++++++++++++++-
 1 file changed, 19 insertions(+), 1 deletion(-)

Index: mozilla/browser/base/content/browser.js
===================================================================
--- mozilla.orig/browser/base/content/browser.js
+++ mozilla/browser/base/content/browser.js
@@ -5959,30 +5959,42 @@
     // clear the plugin list, now that at least one plugin has been installed
     browser.missingPlugins = null;
 
     var notificationBox = gBrowser.getNotificationBox(browser);
     var notification = notificationBox.getNotificationWithValue("missing-plugins");
     if (notification)
       notificationBox.removeNotification(notification);
 
-    // reload the browser to make the new plugin show.
+    // reload plugins
+    var pm = Components.classes["@mozilla.org/plugin/manager;1"]
+                 .getService(Components.interfaces.nsIPluginManager);
+    pm.reloadPlugins(false);
+    // ... and reload the browser to activate new plugins available
     browser.reload();
   },
 
   // Callback for user clicking on a missing (unsupported) plugin.
   installSinglePlugin: function (aEvent) {
     var missingPluginsArray = {};
 
     var pluginInfo = getPluginInfo(aEvent.target);
     missingPluginsArray[pluginInfo.mimetype] = pluginInfo;
 
+    gBrowser.selectedBrowser.addEventListener("NewPluginInstalled",
+                                              gMissingPluginInstaller.refreshBrowser,
+                                              false);
+
     openDialog("chrome://mozapps/content/plugins/pluginInstallerWizard.xul",
                "PFSWindow", "chrome,centerscreen,resizable=yes",
                {plugins: missingPluginsArray, browser: gBrowser.selectedBrowser});
+
+    gBrowser.selectedBrowser.removeEventListener("NewPluginInstalled",
+                                                 gMissingPluginInstaller.refreshBrowser,
+                                                 false);
   },
 
   // Callback for user clicking on a disabled plugin
   managePlugins: function (aEvent) {
     BrowserOpenAddonsMgr("plugins");
   },
 
   // Callback for user clicking "submit a report" link
@@ -6038,21 +6050,27 @@
       var url = formatURL("plugins.update.url", true);
       gBrowser.loadOneTab(url, {inBackground: false});
       return true;
     }
 
     function showPluginsMissing() {
       // get the urls of missing plugins
       var missingPluginsArray = gBrowser.selectedBrowser.missingPlugins;
+      gBrowser.selectedBrowser.addEventListener("NewPluginInstalled",
+                                                gMissingPluginInstaller.refreshBrowser,
+                                                false);
       if (missingPluginsArray) {
         openDialog("chrome://mozapps/content/plugins/pluginInstallerWizard.xul",
                    "PFSWindow", "chrome,centerscreen,resizable=yes",
                    {plugins: missingPluginsArray, browser: gBrowser.selectedBrowser});
       }
+      gBrowser.selectedBrowser.removeEventListener("NewPluginInstalled",
+                                                   gMissingPluginInstaller.refreshBrowser,
+                                                   false);
     }
 
     let notifications = {
       PluginBlocklisted : {
                             barID   : "blocked-plugins",
                             iconURL : "chrome://mozapps/skin/plugins/pluginBlocked-16.png",
                             message : gNavigatorBundle.getString("blockedpluginsMessage.title"),
                             buttons : [{
