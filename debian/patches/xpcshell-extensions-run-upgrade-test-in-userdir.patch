Index: firefox-trunk-19.0~a1~hg20121114r113129/toolkit/mozapps/extensions/test/xpcshell/test_upgrade.js
===================================================================
--- firefox-trunk-19.0~a1~hg20121114r113129.orig/toolkit/mozapps/extensions/test/xpcshell/test_upgrade.js	2012-11-14 00:37:54.000000000 +0000
+++ firefox-trunk-19.0~a1~hg20121114r113129/toolkit/mozapps/extensions/test/xpcshell/test_upgrade.js	2012-11-14 20:09:01.430165000 +0000
@@ -10,15 +10,39 @@
 // Enable loading extensions from the application scope
 Services.prefs.setIntPref("extensions.enabledScopes",
                           AddonManager.SCOPE_PROFILE +
-                          AddonManager.SCOPE_APPLICATION);
+                          AddonManager.SCOPE_USER);
+
+var provider = {
+  getFile: function(prop, persist) {
+    if (prop == "XREUSysExt") {
+      var dir = Services.dirsvc.get("ProfD", AM_Ci.nsIFile);
+      dir.append("user_extensions");
+      if (!dir.exists()) {
+        dir.create(AM_Ci.nsIFile.DIRECTORY_TYPE, 0755);
+      }
+      persist.value = true;
+      return dir;
+    }
+    throw Components.results.NS_ERROR_FAILURE;
+  },
+
+  QueryInterface: function(iid) {
+    if (iid.equals(AM_Ci.nsIDirectoryProvider) ||
+        iid.equals(AM_Ci.nsISupports)) {
+      return this;
+    }
+    throw Components.results.NS_ERROR_NO_INTERFACE;
+  }
+};
+
+Services.dirsvc.registerProvider(provider);
 
 const profileDir = gProfD.clone();
 profileDir.append("extensions");
 
-const globalDir = Services.dirsvc.get("XCurProcD", AM_Ci.nsIFile);
-globalDir.append("extensions");
+const userDir = Services.dirsvc.get("XREUSysExt", AM_Ci.nsIFile);
+userDir.append("xpcshell@tests.mozilla.org");
 
-var gGlobalExisted = globalDir.exists();
 var gInstallTime = Date.now();
 
 function run_test() {
@@ -77,7 +101,7 @@
       maxVersion: "1"
     }],
     name: "Test Addon 4",
-  }, globalDir);
+  }, userDir);
   setExtensionModifiedTime(dest, gInstallTime);
 
   do_test_pending();
@@ -86,13 +110,6 @@
 }
 
 function end_test() {
-  if (!gGlobalExisted) {
-    globalDir.remove(true);
-  }
-  else {
-    globalDir.append(do_get_expected_addon_name("addon4@tests.mozilla.org"));
-    globalDir.remove(true);
-  }
   do_test_finished();
 }
 
@@ -116,7 +133,7 @@
     do_check_false(isExtensionInAddonsList(profileDir, a3.id));
 
     do_check_neq(a4, null);
-    do_check_true(isExtensionInAddonsList(globalDir, a4.id));
+    do_check_true(isExtensionInAddonsList(userDir, a4.id));
     do_check_eq(a4.version, "1.0");
 
     run_test_2();
@@ -135,7 +152,7 @@
       maxVersion: "2"
     }],
     name: "Test Addon 4",
-  }, globalDir);
+  }, userDir);
   setExtensionModifiedTime(dest, gInstallTime);
 
   restartManager("2");
@@ -155,7 +172,7 @@
     do_check_true(isExtensionInAddonsList(profileDir, a3.id));
 
     do_check_neq(a4, null);
-    do_check_true(isExtensionInAddonsList(globalDir, a4.id));
+    do_check_true(isExtensionInAddonsList(userDir, a4.id));
     do_check_eq(a4.version, "2.0");
 
     run_test_3();
@@ -174,7 +191,7 @@
       maxVersion: "3"
     }],
     name: "Test Addon 4",
-  }, globalDir);
+  }, userDir);
   setExtensionModifiedTime(dest, gInstallTime);
 
   // Simulates a simple Build ID change, the platform deletes extensions.ini
@@ -200,7 +217,7 @@
     do_check_true(isExtensionInAddonsList(profileDir, a3.id));
 
     do_check_neq(a4, null);
-    do_check_true(isExtensionInAddonsList(globalDir, a4.id));
+    do_check_true(isExtensionInAddonsList(userDir, a4.id));
     do_check_eq(a4.version, "2.0");
 
     end_test();
