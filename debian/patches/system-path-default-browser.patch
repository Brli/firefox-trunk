Description: Ensure that mSystemAppPath points to the real executable in /usr/bin
Author: Alexander Sack <asac@ubuntu.com>
Bug-Ubuntu: https://launchpad.net/bugs/185622
Forwarded: no

--- a/browser/components/shell/src/nsGNOMEShellService.cpp
+++ b/browser/components/shell/src/nsGNOMEShellService.cpp
@@ -67,6 +67,8 @@
 #include <limits.h>
 #include <stdlib.h>
 
+#define SYSTEM_PATH_BUILD 1
+
 struct ProtocolAssociation
 {
   const char *name;
@@ -132,6 +134,24 @@ nsGNOMEShellService::Init()
   rv = appPath->AppendNative(NS_LITERAL_CSTRING(MOZ_APP_NAME));
   NS_ENSURE_SUCCESS(rv, rv);
 
+  nsCOMPtr<nsIStringBundleService> bundleService =
+    do_GetService(NS_STRINGBUNDLE_CONTRACTID);
+  NS_ENSURE_TRUE(bundleService, NS_ERROR_OUT_OF_MEMORY);
+
+  nsCOMPtr<nsIStringBundle> brandBundle;
+  bundleService->CreateBundle(BRAND_PROPERTIES, getter_AddRefs(brandBundle));
+  NS_ENSURE_TRUE(brandBundle, NS_ERROR_FAILURE);
+
+  nsString brandShortName;
+  rv = brandBundle->GetStringFromName(NS_LITERAL_STRING("brandShortName").get(),
+                                      getter_Copies(brandShortName));
+
+  if (brandShortName.Equals(NS_LITERAL_STRING("Web Browser"))) {
+    mSystemAppPath.Assign (NS_LITERAL_CSTRING("/usr/bin/" "abrowser"));
+  } else {
+    mSystemAppPath.Assign (NS_LITERAL_CSTRING("/usr/bin/" MOZ_APP_NAME));
+  }
+
   return appPath->GetNativePath(mAppPath);
 }
 
@@ -140,7 +160,6 @@ NS_IMPL_ISUPPORTS1(nsGNOMEShellService,
 PRBool
 nsGNOMEShellService::KeyMatchesAppName(const char *aKeyValue) const
 {
-
   gchar *commandPath;
   if (mUseLocaleFilenames) {
     gchar *nativePath = g_filename_from_utf8(aKeyValue, -1, NULL, NULL, NULL);
@@ -158,9 +177,15 @@ nsGNOMEShellService::KeyMatchesAppName(c
   if (!commandPath)
     return PR_FALSE;
 
+#ifdef SYSTEM_PATH_BUILD
+  PRBool matches = mSystemAppPath.Equals(commandPath);
+  g_free(commandPath);
+  return matches;
+#else
   PRBool matches = mAppPath.Equals(commandPath);
   g_free(commandPath);
   return matches;
+#endif
 }
 
 NS_IMETHODIMP
@@ -215,8 +240,12 @@ nsGNOMEShellService::SetDefaultBrowser(P
 
   nsCOMPtr<nsIGConfService> gconf = do_GetService(NS_GCONFSERVICE_CONTRACTID);
   if (gconf) {
+#ifdef SYSTEM_PATH_BUILD
+    nsCAutoString appKeyValue(mSystemAppPath);
+#else
     nsCAutoString appKeyValue(mAppPath);
-    appKeyValue.Append(" \"%s\"");
+#endif
+    appKeyValue.Append(" %s");
     for (unsigned int i = 0; i < NS_ARRAY_LENGTH(appProtocols); ++i) {
       if (appProtocols[i].essential || aClaimAllTypes) {
         gconf->SetAppForProtocol(nsDependentCString(appProtocols[i].name),
--- a/browser/components/shell/src/nsGNOMEShellService.h
+++ b/browser/components/shell/src/nsGNOMEShellService.h
@@ -58,6 +58,7 @@ private:
   PRPackedBool mCheckedThisSession;
   PRPackedBool mUseLocaleFilenames;
   nsCString    mAppPath;
+  nsCString    mSystemAppPath;
 };
 
 #endif // nsgnomeshellservice_h____
