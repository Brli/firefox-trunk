# Description: Fix skia build on aarch64 against kernel headers that don't define
#  HWCAP_CRC32. This is a combination of 2 upstream patches:
#  https://github.com/google/skia/commit/c665fddeab30dde8f43862d2e8381f4c73e80079
#  https://github.com/google/skia/commit/04d488cf138e4d6935aa26f1e9f742b597c56cc7

--- a/gfx/skia/skia/src/core/SkCpu.cpp
+++ b/gfx/skia/skia/src/core/SkCpu.cpp
@@ -74,14 +74,15 @@
         return features;
     }
 
-#elif defined(SK_CPU_ARM64) && __has_include(<asm/hwcap.h>) && __has_include(<sys/auxv.h>)
-    #include <asm/hwcap.h>
+#elif defined(SK_CPU_ARM64) && __has_include(<sys/auxv.h>)
     #include <sys/auxv.h>
 
     static uint32_t read_cpu_features() {
+        const uint32_t kHWCAP_CRC32 = (1<<7);
+
         uint32_t features = 0;
         uint32_t hwcaps = getauxval(AT_HWCAP);
-        if (hwcaps & HWCAP_CRC32) { features |= SkCpu::CRC32; }
+        if (hwcaps & kHWCAP_CRC32) { features |= SkCpu::CRC32; }
         return features;
     }
 
@@ -89,13 +90,14 @@
     (!defined(__ANDROID_API__) || __ANDROID_API__ >= 18)
     // sys/auxv.h will always be present in the Android NDK due to unified
     //headers, but getauxval is only defined for API >= 18.
-    #include <asm/hwcap.h>
     #include <sys/auxv.h>
 
     static uint32_t read_cpu_features() {
+        const uint32_t kHWCAP_VFPv4 = (1<<16);
+
         uint32_t features = 0;
         uint32_t hwcaps = getauxval(AT_HWCAP);
-        if (hwcaps & HWCAP_VFPv4) { features |= SkCpu::NEON|SkCpu::NEON_FMA|SkCpu::VFP_FP16; }
+        if (hwcaps & kHWCAP_VFPv4) { features |= SkCpu::NEON|SkCpu::NEON_FMA|SkCpu::VFP_FP16; }
         return features;
     }
 
